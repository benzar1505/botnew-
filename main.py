import logging
import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiohttp import web

# –õ–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
API_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
HEROKU_APP_NAME = os.getenv("HEROKU_APP_NAME")
PORT = int(os.getenv("PORT", 5000))  # Heroku –ø–µ—Ä–µ–¥–∞—î PORT —è–∫ –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞

if not API_TOKEN or not HEROKU_APP_NAME:
    raise ValueError("‚ùå –ü–æ–º–∏–ª–∫–∞: TELEGRAM_BOT_TOKEN –∞–±–æ HEROKU_APP_NAME –Ω–µ –∑–∞–¥–∞–Ω–æ!")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)  # –ü–µ—Ä–µ–¥–∞—î–º–æ bot —É –¥–∏—Å–ø–µ—Ç—á–µ—Ä

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìã –ü–æ—Å–ª—É–≥–∏"), KeyboardButton(text="‚úçÔ∏è –ó–∞—è–≤–∫–∞")],
        [KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏"), KeyboardButton(text="‚ùì –î–æ–ø–æ–º–æ–≥–∞")],
    ],
    resize_keyboard=True
)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    await message.answer(
        "üöó –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç —Å–µ—Ä–≤—ñ—Å—É <b>AutoScout Kyiv</b>. –Ø –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º –∑–Ω–∞–π—Ç–∏ –∞–≤—Ç–æ! \n\n"
        "–û–±–µ—Ä—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ –º–µ–Ω—é –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å '–î–æ–ø–æ–º–æ–≥–∞' –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –≤—Å—ñ—Ö –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π.",
        reply_markup=main_menu,
        parse_mode="HTML"  # –ó–∞–º—ñ–Ω–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
    )

# Webhook –æ–±—Ä–æ–±–Ω–∏–∫
async def handle_webhook(request):
    update = await request.json()
    await dp.feed_update(bot, update)
    return web.Response(text="OK")

# Webhook –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
async def on_startup(app):
    webhook_url = f"https://{HEROKU_APP_NAME}.herokuapp.com/"
    logging.info(f"üîó –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è webhook: {webhook_url}")
    await bot.set_webhook(webhook_url)

# –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
app = web.Application()
app.router.add_post("/", handle_webhook)
app.on_startup.append(on_startup)

if __name__ == "__main__":
    logging.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
    web.run_app(app, host="0.0.0.0", port=PORT)
