import logging
import asyncio
import os
from aiogram import Bot, Dispatcher, types, Router
from aiogram.enums import ParseMode
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command, Text
from keep_alive import keep_alive  # –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Heroku

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞
API_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")  # –í–∞—à Telegram ID –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞—è–≤–æ–∫
if not API_TOKEN or not ADMIN_ID:
    raise ValueError("‚ùå API_TOKEN –∞–±–æ ADMIN_ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –î–æ–¥–∞–π—Ç–µ —ó—Ö —É –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞.")

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# –°—Ç–≤–æ—Ä—é—î–º–æ Router
router = Router()

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìã –ü–æ—Å–ª—É–≥–∏"), KeyboardButton(text="‚úçÔ∏è –ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É")],
        [KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏"), KeyboardButton(text="‚ùì –î–æ–ø–æ–º–æ–≥–∞")],
    ],
    resize_keyboard=True
)

# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def send_welcome(message: types.Message):
    await message.answer(
        "üöó –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç —Å–µ—Ä–≤—ñ—Å—É <b>AutoScout Kyiv</b>. –Ø –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º –∑–Ω–∞–π—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω–µ –∞–≤—Ç–æ! \n\n"
        "–û–±–µ—Ä—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ –º–µ–Ω—é –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å '–î–æ–ø–æ–º–æ–≥–∞' –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –≤—Å—ñ—Ö –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π.",
        reply_markup=main_menu
    )

# –ü–æ—Å–ª—É–≥–∏
@router.message(Text(equals="üìã –ü–æ—Å–ª—É–≥–∏"))
async def show_services(message: types.Message):
    await message.answer(
        "üõ† <b>–ù–∞—à—ñ –ø–æ—Å–ª—É–≥–∏:</b>\n\n"
        "üîπ –†–∞–∑–æ–≤–∏–π –æ–≥–ª—è–¥ –∞–≤—Ç–æ\n"
        "üîπ –ü—ñ–¥–±—ñ—Ä –∞–≤—Ç–æ '–ø—ñ–¥ –∫–ª—é—á'\n"
        "üîπ –ï–∫—Å–ø–µ—Ä—Ç –Ω–∞ –¥–µ–Ω—å\n"
        "üîπ –°—É–ø—Ä–æ–≤—ñ–¥ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–Ω–∫—É\n"
        "üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤\n"
        "üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –°–¢–û\n"
        "üîπ –§–æ—Ç–æ/–≤—ñ–¥–µ–æ –∑–≤—ñ—Ç"
    )

# –ó–∞—è–≤–∫–∞
@router.message(Text(equals="‚úçÔ∏è –ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É"))
async def send_request_info(message: types.Message):
    await message.answer(
        "üì© –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏ –Ω–∞ –Ω–∞—à—ñ –ø–æ—Å–ª—É–≥–∏, –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥–∞–π—Ç–µ –Ω–∞—Å—Ç—É–ø–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é:\n"
        "1Ô∏è‚É£ –í–∞—à–µ —ñ–º'—è\n"
        "2Ô∏è‚É£ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É\n"
        "3Ô∏è‚É£ –û–ø–∏—Å –≤–∞—à–æ—ó –∑–∞—è–≤–∫–∏ –∞–±–æ –ø–∏—Ç–∞–Ω–Ω—è"
    )
    # –û—á—ñ–∫—É—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:")

# –û–±—Ä–æ–±–∫–∞ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É (—ñ–º'—è, —Ç–µ–ª–µ—Ñ–æ–Ω, –æ–ø–∏—Å)
user_data = {}

@router.message(Text)
async def handle_response(message: types.Message):
    user_id = message.from_user.id
    if user_id not in user_data:
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user_data[user_id] = {"name": message.text}
        await message.answer("–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:")
    elif "phone" not in user_data[user_id]:
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–µ–ª–µ—Ñ–æ–Ω
        user_data[user_id]["phone"] = message.text
        await message.answer("–û—Å—Ç–∞–Ω–Ω—ñ–π –∫—Ä–æ–∫! –ù–∞–ø–∏—à—ñ—Ç—å –æ–ø–∏—Å –≤–∞—à–æ—ó –∑–∞—è–≤–∫–∏ –∞–±–æ –ø–∏—Ç–∞–Ω–Ω—è:")
    else:
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–ø–∏—Å –∑–∞—è–≤–∫–∏
        user_data[user_id]["message"] = message.text
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞—è–≤–∫—É –≤–∞–º –Ω–∞ Telegram
        await bot.send_message(
            ADMIN_ID, 
            f"üì© –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –≤—ñ–¥ {user_data[user_id]['name']}:\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user_data[user_id]['phone']}\n"
            f"üìã –û–ø–∏—Å: {user_data[user_id]['message']}"
        )
        await message.answer("üôè –î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É! –ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.")
        # –û—á–∏—â–∞—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ
        del user_data[user_id]

# –ö–æ–Ω—Ç–∞–∫—Ç–∏
@router.message(Text(equals="üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏"))
async def send_contacts(message: types.Message):
    await message.answer(
        "üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç–∏:</b>\n"
        "üì≤ –¢–µ–ª–µ—Ñ–æ–Ω: +380 (73) 933 77 97\n"
        "üìç –ö–∏—ó–≤\n\n"
        "üîπ <a href='https://t.me/autoscout_kyiv'>Telegram</a>\n"
        "üîπ <a href='https://instagram.com/autoscout_kyiv'>Instagram</a>\n"
        "üîπ <a href='https://autoscout.neocities.org/'>–ù–∞—à —Å–∞–π—Ç</a>"
    )

# –î–æ–ø–æ–º–æ–≥–∞
@router.message(Text(equals="‚ùì –î–æ–ø–æ–º–æ–≥–∞"))
async def send_help(message: types.Message):
    await message.answer(
        "‚ùì <b>–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:</b>\n"
        "üìã –ü–æ—Å–ª—É–≥–∏ ‚Äî –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –Ω–∞—à—ñ –ø–æ—Å–ª—É–≥–∏\n"
        "‚úçÔ∏è –ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É ‚Äî —è–∫ –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n"
        "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏ ‚Äî —Ç–µ–ª–µ—Ñ–æ–Ω, Telegram, Instagram, —Å–∞–π—Ç\n"
        "–Ø–∫—â–æ —É –≤–∞—Å —î –ø–∏—Ç–∞–Ω–Ω—è, –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—è!"
    )

# –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ Router –¥–æ Dispatcher
dp.include_router(router)

# –§—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    keep_alive()  # –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ —Ä–æ–±–æ—Ç–∏ Heroku
    asyncio.run(main())